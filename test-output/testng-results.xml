<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[onStart]]>
    </line>
    <line>
      <![CDATA[createOrganization]]>
    </line>
    <line>
      <![CDATA[onTestSuccess]]>
    </line>
    <line>
      <![CDATA[createOrganizationWithIndustry]]>
    </line>
    <line>
      <![CDATA[onTestFailure]]>
    </line>
    <line>
      <![CDATA[createContact]]>
    </line>
    <line>
      <![CDATA[onTestSuccess]]>
    </line>
  </reporter-output>
  <suite started-at="2024-07-31T14:47:10 IST" name="Suite" finished-at="2024-07-31T14:48:51 IST" duration-ms="100229">
    <groups>
    </groups>
    <test started-at="2024-07-31T14:47:10 IST" name="Test" finished-at="2024-07-31T14:48:51 IST" duration-ms="100229">
      <class name="Task.Create_Organization">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:Task.Create_Organization@4e096385]" started-at="2024-07-31T14:47:11 IST" name="preCondition" finished-at="2024-07-31T14:47:16 IST" duration-ms="4888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method is-config="true" signature="login()[pri:0, instance:Task.Create_Organization@4e096385]" started-at="2024-07-31T14:47:16 IST" name="login" finished-at="2024-07-31T14:47:21 IST" duration-ms="4415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="createOrganization()[pri:0, instance:Task.Create_Organization@4e096385]" started-at="2024-07-31T14:47:21 IST" name="createOrganization" finished-at="2024-07-31T14:47:43 IST" duration-ms="22978" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[createOrganization]]>
            </line>
            <line>
              <![CDATA[onTestSuccess]]>
            </line>
          </reporter-output>
        </test-method> <!-- createOrganization -->
        <test-method is-config="true" signature="logout()[pri:0, instance:Task.Create_Organization@4e096385]" started-at="2024-07-31T14:47:44 IST" name="logout" finished-at="2024-07-31T14:47:46 IST" duration-ms="2142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="postCondition()[pri:0, instance:Task.Create_Organization@4e096385]" started-at="2024-07-31T14:47:46 IST" name="postCondition" finished-at="2024-07-31T14:47:46 IST" duration-ms="726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- Task.Create_Organization -->
      <class name="Task.Create_OrganizationWithIndustry">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:Task.Create_OrganizationWithIndustry@649bec2e]" started-at="2024-07-31T14:47:46 IST" name="preCondition" finished-at="2024-07-31T14:47:50 IST" duration-ms="3357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method is-config="true" signature="login()[pri:0, instance:Task.Create_OrganizationWithIndustry@649bec2e]" started-at="2024-07-31T14:47:50 IST" name="login" finished-at="2024-07-31T14:47:54 IST" duration-ms="4422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="createOrganizationWithIndustry()[pri:0, instance:Task.Create_OrganizationWithIndustry@649bec2e]" started-at="2024-07-31T14:47:54 IST" name="createOrganizationWithIndustry" finished-at="2024-07-31T14:48:16 IST" duration-ms="21956" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Task.Create_OrganizationWithIndustry.createOrganizationWithIndustry(Create_OrganizationWithIndustry.java:38)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[createOrganizationWithIndustry]]>
            </line>
            <line>
              <![CDATA[onTestFailure]]>
            </line>
          </reporter-output>
        </test-method> <!-- createOrganizationWithIndustry -->
        <test-method is-config="true" signature="logout()[pri:0, instance:Task.Create_OrganizationWithIndustry@649bec2e]" started-at="2024-07-31T14:48:16 IST" name="logout" finished-at="2024-07-31T14:48:18 IST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="postCondition()[pri:0, instance:Task.Create_OrganizationWithIndustry@649bec2e]" started-at="2024-07-31T14:48:18 IST" name="postCondition" finished-at="2024-07-31T14:48:19 IST" duration-ms="418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- Task.Create_OrganizationWithIndustry -->
      <class name="Task.Create_Contacts_WithDate">
        <test-method is-config="true" signature="preCondition()[pri:0, instance:Task.Create_Contacts_WithDate@693fe6c9]" started-at="2024-07-31T14:48:19 IST" name="preCondition" finished-at="2024-07-31T14:48:23 IST" duration-ms="4680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method is-config="true" signature="login()[pri:0, instance:Task.Create_Contacts_WithDate@693fe6c9]" started-at="2024-07-31T14:48:23 IST" name="login" finished-at="2024-07-31T14:48:27 IST" duration-ms="3728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="createContact()[pri:0, instance:Task.Create_Contacts_WithDate@693fe6c9]" started-at="2024-07-31T14:48:27 IST" name="createContact" finished-at="2024-07-31T14:48:48 IST" duration-ms="21191" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[createContact]]>
            </line>
            <line>
              <![CDATA[onTestSuccess]]>
            </line>
          </reporter-output>
        </test-method> <!-- createContact -->
        <test-method is-config="true" signature="logout()[pri:0, instance:Task.Create_Contacts_WithDate@693fe6c9]" started-at="2024-07-31T14:48:48 IST" name="logout" finished-at="2024-07-31T14:48:50 IST" duration-ms="1975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method is-config="true" signature="postCondition()[pri:0, instance:Task.Create_Contacts_WithDate@693fe6c9]" started-at="2024-07-31T14:48:50 IST" name="postCondition" finished-at="2024-07-31T14:48:51 IST" duration-ms="397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- Task.Create_Contacts_WithDate -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
